<Page x:Class="BlurFileEditor.Pages.LocEditorPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:BlurFileEditor.Pages"
      xmlns:loc="clr-namespace:BlurFormats.Loc;assembly=BlurFormats"
      xmlns:db="clr-namespace:BlurFileEditor.ViewModels.DesignerViewModels.Pages"
      xmlns:m="clr-namespace:BlurFileEditor.Models.LocEditorPage"
      xmlns:b="clr-namespace:BlurFileEditor.Behaviors"
      xmlns:c="clr-namespace:BlurFileEditor.Resources.Converters"
      xmlns:vm="clr-namespace:BlurFileEditor.ViewModels.Pages"
      xmlns:anim="clr-namespace:BlurFileEditor.Utils.Animations"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      d:DataContext="{d:DesignData IsDesignTimeCreatable=True,Type=db:DesignerLocEditorViewModel}"
      Background="White"
      ShowsNavigationUI="False">
    <Page.DataContext>
        <vm:LocEditorViewModel/>
    </Page.DataContext>
    <Page.Resources>
        <c:BoolToVisibilityConverter x:Key="BoolToVisibility" TrueValue="Visible" FalseValue="Collapsed"/>
        <CubicEase EasingMode="EaseOut" x:Key="LanguageSizeEase"/>
        <Border x:Key="LanguagePlaceholder" CornerRadius="15" Height="30" Width="0" IsEnabled="False"/>
        <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="#FF333333"/>
        <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333"/>
        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FF000000"/>
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF000000"/>
        <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070"/>
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" StrokeDashArray="1 2" Stroke="Black" SnapsToDevicePixels="true" StrokeThickness="1"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="00:00:00" To="Disabled">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                    <EasingDoubleKeyFrame KeyTime="00:00:01" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19" RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" SnapsToDevicePixels="false" StrokeThickness="2" VerticalAlignment="Center"/>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="LocalizationExpanderTemplate" TargetType="{x:Type Expander}">
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" SnapsToDevicePixels="true">
                <DockPanel>
                    <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" DockPanel.Dock="Top" FontStretch="{TemplateBinding FontStretch}" Foreground="{TemplateBinding Foreground}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
                </DockPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="true">
                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Page.Resources>
    <DockPanel>
        <DockPanel Margin="0,2" DockPanel.Dock="Top" LastChildFill="False">
            <Menu DockPanel.Dock="Right">
                <MenuItem Header="∨">
                    <MenuItem x:Name="AllowRefEdit" IsCheckable="True" Header="Allow Editing Ref Names"/>
                    <MenuItem x:Name="AllowIdEdit" IsCheckable="True" Header="Allow Editing Ids"/>
                </MenuItem>
            </Menu>
            <TextBox Width="140" Text="{Binding SearchCriteria, UpdateSourceTrigger=PropertyChanged}" 
                     DockPanel.Dock="Right" 
                     Margin="5,0"/>
        </DockPanel>
        <ScrollViewer x:Name="LanguageViewer" 
                      DockPanel.Dock="Left" 
                      Background="Transparent" 
                      Width="40" 
                      ScrollViewer.VerticalScrollBarVisibility="Hidden">
            <ScrollViewer.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="120" Duration="0:0:0.4"
                                DecelerationRatio="1"
                                EasingFunction="{StaticResource LanguageSizeEase}"
                                Storyboard.TargetName="LanguageViewer"
                                Storyboard.TargetProperty="Width"/>
                            <DoubleAnimation To="110" Duration="0:0:0.4"
                                DecelerationRatio="1"
                                EasingFunction="{StaticResource LanguageSizeEase}"
                                Storyboard.TargetName="AddButton"
                                Storyboard.TargetProperty="Width"/>
                            <DoubleAnimation To="45" Duration="0:0:0.4"
                                DecelerationRatio="1"
                                Storyboard.TargetProperty="Width" 
                                EasingFunction="{StaticResource LanguageSizeEase}"
                                Storyboard.Target="{StaticResource LanguagePlaceholder}"/>
                            <BooleanAnimationUsingKeyFrames Duration="0:0:0.2"
                                Storyboard.TargetProperty="IsEnabled" 
                                Storyboard.Target="{StaticResource LanguagePlaceholder}">
                                <BooleanAnimationUsingKeyFrames.KeyFrames>
                                    <BooleanKeyFrameCollection >
                                        <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0.2"/>
                                    </BooleanKeyFrameCollection>
                                </BooleanAnimationUsingKeyFrames.KeyFrames>
                            </BooleanAnimationUsingKeyFrames>
                            <DoubleAnimation To="20" Duration="0:0:0.4"
                                Storyboard.TargetProperty="Height" 
                                EasingFunction="{StaticResource LanguageSizeEase}"
                                Storyboard.Target="{StaticResource LanguagePlaceholder}"/>
                            <anim:CornerRadiusAnimation To="2" Duration="0:0:0.4"
                                Storyboard.TargetProperty="CornerRadius" 
                                EasingFunction="{StaticResource LanguageSizeEase}"
                                Storyboard.Target="{StaticResource LanguagePlaceholder}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="40" Duration="0:0:0.4"
                                DecelerationRatio="1"
                                EasingFunction="{StaticResource LanguageSizeEase}"
                                Storyboard.TargetName="LanguageViewer"
                                Storyboard.TargetProperty="Width"/>
                            <DoubleAnimation To="30" Duration="0:0:0.4"
                                DecelerationRatio="1"
                                EasingFunction="{StaticResource LanguageSizeEase}"
                                Storyboard.TargetName="AddButton"
                                Storyboard.TargetProperty="Width"/>
                            <DoubleAnimation To="0" Duration="0:0:0.4"
                                DecelerationRatio="1"
                                Storyboard.TargetProperty="Width" 
                                EasingFunction="{StaticResource LanguageSizeEase}"
                                Storyboard.Target="{StaticResource LanguagePlaceholder}"/>
                            <BooleanAnimationUsingKeyFrames Duration="0:0:0.2"
                                Storyboard.TargetProperty="IsEnabled" 
                                Storyboard.Target="{StaticResource LanguagePlaceholder}">
                                <BooleanAnimationUsingKeyFrames.KeyFrames>
                                    <BooleanKeyFrameCollection >
                                        <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0"/>
                                    </BooleanKeyFrameCollection>
                                </BooleanAnimationUsingKeyFrames.KeyFrames>
                            </BooleanAnimationUsingKeyFrames>
                            <DoubleAnimation To="30" Duration="0:0:0.4"
                                Storyboard.TargetProperty="Height" 
                                EasingFunction="{StaticResource LanguageSizeEase}"
                                Storyboard.Target="{StaticResource LanguagePlaceholder}"/>
                            <anim:CornerRadiusAnimation To="15" Duration="0:0:0.4"
                                Storyboard.TargetProperty="CornerRadius" 
                                EasingFunction="{StaticResource LanguageSizeEase}"
                                Storyboard.Target="{StaticResource LanguagePlaceholder}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </ScrollViewer.Triggers>
            <StackPanel HorizontalAlignment="Stretch">
                <ListView ItemsSource="{Binding Languages}" 
                          BorderThickness="0" 
                          Padding="0" 
                          Margin="0" 
                          HorizontalAlignment="Stretch"  
                          HorizontalContentAlignment="Center"  
                          ScrollViewer.CanContentScroll="False" 
                          ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
                          ScrollViewer.VerticalScrollBarVisibility="Hidden">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Focusable" Value="false"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate x:Name="temp">
                            <Grid Height="34" Background="White">
                                <Grid.Triggers>
                                    <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="30" Duration="0:0:0.1"
                                                    Storyboard.TargetName="DeleteButton"
                                                    Storyboard.TargetProperty="Width"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0" Duration="0:0:0.1"
                                                    Storyboard.TargetName="DeleteButton"
                                                    Storyboard.TargetProperty="Width"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Grid.Triggers>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="LeftColumn" 
                                                      Width="{Binding Width, Source={StaticResource LanguagePlaceholder}}"/>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition x:Name="RightColumn" 
                                                      Width="{Binding Width, Source={StaticResource LanguagePlaceholder}}"/>
                                </Grid.ColumnDefinitions>
                                <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Enabled}" 
                                          IsEnabled="True"
                                          VerticalAlignment="Center"/>
                                <Border x:Name="LanguageNameBorder" Grid.Column="1" 
                                        Height="{Binding Height, Source={StaticResource LanguagePlaceholder}}">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" 
                                                    Value="{Binding CornerRadius, Source={StaticResource LanguagePlaceholder}}"/>
                                            <Setter Property="Background" Value="#FFEDEDED"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding DataContext.IsShowing, RelativeSource={RelativeSource AncestorType={x:Type Border}}}" Value="True">
                                                    <Setter Property="Background" Value="Lightblue"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                                             
                                             AcceptsReturn="True" MinWidth="30" MaxLength="2" BorderThickness="0"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             IsEnabled="{Binding IsEnabled, Source={StaticResource LanguagePlaceholder}}"
                                             Background="Transparent" HorizontalContentAlignment="Center"/>
                                </Border>
                                <Button x:Name="DeleteButton" 
                                        Command="{Binding RemoveLanguageCommand}" CommandParameter="{Binding}" 
                                        ToolTip="Remove Language" 
                                        FontFamily="Segoe MDL2 Assets" 
                                        Content="&#xE711;" 
                                        Width="0" 
                                        HorizontalAlignment="Center" 
                                        BorderThickness="0" 
                                        Grid.Column="2">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Background" Value="#FFEDEDED"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#FF92D5FF"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Template>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="DeleteButtonBorder" 
                                                    CornerRadius="15" 
                                                    Width="{TemplateBinding Width}" Height="{TemplateBinding Width}" 
                                                    Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" 
                                                                  VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <Button x:Name="AddButton" 
                        ToolTip="Add Language" 
                        Margin="0" 
                        Command="{Binding AddLanguageCommand}" 
                        FontFamily="Segoe MDL2 Assets" 
                        Content="&#xE710;" Width="30" 
                        HorizontalAlignment="Center" 
                        BorderThickness="0">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="#FFEDEDED"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FF92D5FF"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="AddButtonBorder" 
                                    CornerRadius="15" 
                                    Width="{TemplateBinding Width}" Height="30" 
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </StackPanel>
        </ScrollViewer>
        <ListView ItemsSource="{Binding LocalizationStrings}" 
                  DockPanel.Dock="Bottom" 
                  HorizontalAlignment="Stretch" 
                  HorizontalContentAlignment="Stretch" d:ItemsSource="{d:SampleData ItemCount=5}">
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate DataType="{x:Type m:LocalizationItem}">
                    <Expander Template="{DynamicResource LocalizationExpanderTemplate}" BorderThickness="0" IsExpanded="False">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpanderVisualStates">
                                <VisualStateGroup.Transitions>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NoSelectedState"/>
                                <VisualState x:Name="SingleSelectedState"/>
                                <VisualState x:Name="MultiSelectedState"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Expander.Style>
                            <Style TargetType="{x:Type Expander}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSingleLanguageActive}" Value="True">
                                        <Setter Property="IsExpanded" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Expander.Style>
                        <Expander.Header>
                            <ContentControl HorizontalAlignment="Stretch">
                                <ContentControl.Template>
                                    <ControlTemplate>
                                        <DockPanel LastChildFill="True" HorizontalAlignment="Stretch">
                                            <Label Content="{Binding Id}" MinWidth="100"/>
                                            <TextBox Text="{Binding Header}" 
                                                     IsEnabled="{Binding IsChecked, ElementName=AllowRefEdit}" 
                                                     AcceptsReturn="True" 
                                                     VerticalContentAlignment="Center"/>
                                            <Label DockPanel.Dock="Left" 
                                                   Width="30" Height="30" 
                                                   Visibility="Collapsed" 
                                                   HorizontalContentAlignment="Stretch" 
                                                   VerticalContentAlignment="Stretch">
                                                <Border Background="Yellow" 
                                                        HorizontalAlignment="Stretch" 
                                                        VerticalAlignment="Stretch" 
                                                        CornerRadius="20">
                                                    <Label Content="!" 
                                                           TextBlock.TextAlignment="Center" 
                                                           HorizontalAlignment="Stretch" 
                                                           VerticalAlignment="Stretch" 
                                                           HorizontalContentAlignment="Center" 
                                                           Padding="0" 
                                                           VerticalContentAlignment="Center"/>
                                                </Border>
                                            </Label>
                                            <TextBox Text="{Binding FirstEnabledTextItem.Text, UpdateSourceTrigger=PropertyChanged}" 
                                                     AcceptsReturn="True" 
                                                     DockPanel.Dock="Right"
                                                     x:Name="SingleEditBox"
                                                     MinWidth="50"
                                                     Width="300"
                                                     Margin="0,0,0,0"
                                                     VerticalContentAlignment="Center"/>
                                            <Grid/>
                                        </DockPanel>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsSingleLanguageActive}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SingleEditBox"
                                                                                   Storyboard.TargetProperty="Visibility">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <DoubleAnimation Duration="0:0:0.1" To="300"
                                        Storyboard.TargetName="SingleEditBox"
                                        Storyboard.TargetProperty="Width"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SingleEditBox"
                                                                                   Storyboard.TargetProperty="Visibility">
                                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Collapsed}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <DoubleAnimation Duration="0:0:0.1" To="0"
                                        Storyboard.TargetName="SingleEditBox"
                                        Storyboard.TargetProperty="Width"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ContentControl.Template>
                            </ContentControl>

                        </Expander.Header>

                        <ListView ItemsSource="{Binding FilteredTexts}" 
                                  b:IgnoreScrollingBehavior.IgnoreScrolling="True">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Focusable" Value="false"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplateSelector>
                                <DataTemplateSelector/>
                            </ListView.ItemTemplateSelector>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <DockPanel LastChildFill="False">
                                        <Label Content="{Binding Language.Name}" MinWidth="40"/>
                                        <TextBox Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}" 
                                                 AcceptsReturn="True" 
                                                 MinWidth="100"
                                                 VerticalContentAlignment="Center"/>
                                    </DockPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Expander>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </DockPanel>
</Page>
