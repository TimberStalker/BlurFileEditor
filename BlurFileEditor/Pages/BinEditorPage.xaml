<Page x:Class="BlurFileEditor.Pages.BinEditorPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:local="clr-namespace:BlurFileEditor.Pages"
      xmlns:bin="clr-namespace:BlurFormats.BlurData;assembly=BlurFormats"
      xmlns:db="clr-namespace:BlurFileEditor.ViewModels.DesignerViewModels.Pages"
      xmlns:b="clr-namespace:BlurFileEditor.Behaviors"
      xmlns:con="clr-namespace:BlurFileEditor.Controls.ComboBox"
      xmlns:co="clr-namespace:BlurFileEditor.Controls"
      xmlns:c="clr-namespace:BlurFileEditor.Resources.Converters"
      xmlns:e="clr-namespace:BlurFormats.BlurData.Entities;assembly=BlurFormats"
      xmlns:vm="clr-namespace:BlurFileEditor.ViewModels.Pages"
      mc:Ignorable="d" 
      d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type=db:DesignerBinEditorModel}"
      d:DesignHeight="650" d:DesignWidth="1000"
      FontFamily="CascadiaMono"
      Background="White"
      Title="BinEditor"
      x:Name="MainEditorPage">
    <Page.DataContext>
        <vm:BinEditorViewModel x:Name="ViewModel"/>
    </Page.DataContext>
    <Page.Resources>
        <c:EntityToResourceKeyConverter x:Key="EntityToResourceKeyConverter"/>
        <c:FieldToDataTypeDisplayConverter x:Key="FieldToDataTypeDisplayConverter"/>
        <c:EntityToExtraDataConverter x:Key="EntityToExtraDataConverter"/>
        <c:EntityTypeHasValueConverter x:Key="EntityTypeHasValueConverter"/>
        <c:FieldHasDataTypeDisplayConverter x:Key="FieldHasDataTypeDisplayConverter"/>
        <c:ValueImplementsTypeConverter x:Key="ValueImplementsTypeConverter"/>
        <c:GetValueTypeConverter x:Key="GetValueTypeConverter"/>
    </Page.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="3"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <DockPanel>
            <DockPanel DockPanel.Dock="Bottom" LastChildFill="False">
                <Button Content="&lt;&lt;" Command="{Binding MaxDecrementPageCommand}"/>
                <Button Content="&lt;" Command="{Binding DecrementPageCommand}"/>
                <Label>
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0:000}/{1:000}">
                                <Binding Path="VisiblePage"/>
                                <Binding Path="TotalPages" ElementName="RecordTree"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Label>
                <Button Content="&gt;" Command="{Binding IncrementPageCommand}"/>
                <Button Content="&gt;&gt;" Command="{Binding MaxIncrementPageCommand}"/>
            </DockPanel>
            <co:RecordTreeView x:Name="RecordTree" ItemsPerPage="25" TotalPages="{Binding TotalPages, Mode=OneWayToSource}" 
                               CurrentPage="{Binding CurrentPage}" EntityItems="{Binding Bin.Records, Mode=OneWay}"/>
        </DockPanel>
        <GridSplitter Grid.Column="1" Width="3" VerticalAlignment="Stretch" HorizontalAlignment="Center"/>
        <TreeView ItemsSource="{Binding DataTypes}" Grid.Column="2">
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type bin:DataType}" ItemsSource="{Binding Fields}">
                    <DockPanel LastChildFill="False">
                        <TextBlock Padding="2" Margin="0,2">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} {1}">
                                    <Binding Path="StructureType"/>
                                    <Binding Path="Name"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <DockPanel VerticalAlignment="Center">
                            <TextBlock Text=" : "/>
                            <TextBlock Text="{Binding Base.Name}"/>
                            <DockPanel.Style>
                                <Style TargetType="DockPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Base}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>
                        </DockPanel>
                    </DockPanel>
                </HierarchicalDataTemplate>
                <DataTemplate DataType="{x:Type bin:DataField}">
                    <DockPanel HorizontalAlignment="Stretch">
                        <TextBlock Text="{Binding ., Converter={StaticResource FieldToDataTypeDisplayConverter}}"
                                   Margin="0,0,5,0">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding DataContext,RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource GetValueTypeConverter}}" Value="{x:Type bin:DataType}"/>
                                                <Condition Binding="{Binding DataContext.StructureType,RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="1"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding DataContext,RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource GetValueTypeConverter}}" Value="{x:Type bin:DataType}"/>
                                                <Condition Binding="{Binding DataContext.StructureType,RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="2"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="{Binding Name, StringFormat='{}{0};'}" MaxWidth="250"/>
                    </DockPanel>
                </DataTemplate>
            </TreeView.Resources>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Padding" Value="1,0,0,0"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="19" Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <Border x:Name="Bd" SnapsToDevicePixels="true" Grid.Column="1" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                        <ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
                                    </Border>
                                    <Border Grid.Column="1" Grid.Row="1" BorderBrush="Transparent" BorderThickness="0" CornerRadius="0" Padding="0">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding .}" Value="true">
                                                        <Setter Property="BorderThickness" Value=".5"/>
                                                        <Setter Property="BorderBrush" Value="Black"/>
                                                        <Setter Property="CornerRadius" Value="5"/>
                                                        <Setter Property="Padding" Value="5"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <ItemsPresenter x:Name="ItemsHost"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="false">
                                        <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
    </Grid>
</Page>
